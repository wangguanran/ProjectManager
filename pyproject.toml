[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "multi-project-manager"
version = "0.0.6"
authors = [
  { name="wangguanran", email="elvans.wang@gmail.com" },
]
description = "A comprehensive project and patch management tool for multi-board, multi-project environments with Git integration and automated PO (Patch/Override) operations."
readme = "README.md"
requires-python = ">=3.6"
license = "GPL-3.0"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Version Control :: Git",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
]
dependencies = [
    "GitPython",
    'importlib-metadata; python_version < "3.8"',
]

[project.optional-dependencies]
dev = [
    "build",
    "pytest",
    "pyinstaller",
    "toml",
    "pylint",
    "pytest-cov",
    "black",
    "isort",
    "mypy",
]

[project.urls]
"Homepage" = "https://github.com/wangguanran/ProjectManager"
"Bug Tracker" = "https://github.com/wangguanran/ProjectManager/issues"
"Repository" = "https://github.com/wangguanran/ProjectManager"

[tool.setuptools.packages.find]
where = ["src"] 

[tool.setuptools.package-data]
"*" = ["*.txt", "*.md", "*.ini"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.black]
line-length = 88
target-version = ['py37']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

# [tool.mypy]
# python_version = "3.8"
# warn_return_any = true
# warn_unused_configs = true
# disallow_untyped_defs = true
# disallow_incomplete_defs = true
# check_untyped_defs = true
# disallow_untyped_decorators = true
# no_implicit_optional = true
# warn_redundant_casts = true
# warn_unused_ignores = true
# warn_no_return = true
# warn_unreachable = true
# strict_equality = true

# [[tool.mypy.overrides]]
# module = [
#     "GitPython.*",
# ]
# ignore_missing_imports = true 