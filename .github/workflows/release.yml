name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  actions: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    container:
      image: python:3.10-slim
    steps:
    - uses: actions/checkout@v4
    
    - name: Install system dependencies
      run: |
        apt-get update
        apt-get install -y patchelf binutils git
    
    - name: Install dependencies
      run: pip install -r requirements.txt
    
    - name: Build project
      run: bash build.sh
    
    - name: Run tests
      run: pytest
    
    - name: Run pylint
      run: |
        pip install pylint
        # Find all Python files and run pylint
        find . -name "*.py" -not -path "./venv/*" -not -path "./.venv/*" -not -path "./__pycache__/*" | xargs pylint || true
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          out/binary/pm
          install.sh
          uninstall.sh

  release:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: .
    
    - name: Create release assets
      run: |
        mkdir -p release
        cp out/binary/pm release/project-manager-linux-x64
        cd release
        sha256sum project-manager-linux-x64 > project-manager-linux-x64.sha256
        cd ..
        
        # Create release notes
        cat > release/RELEASE_NOTES.md << EOF
        # ProjectManager Release
        
        ## Installation
        
        ### Linux
        \`\`\`bash
        # Download the binary
        wget https://github.com/\${{ github.repository }}/releases/download/\${{ github.ref_name }}/project-manager-linux-x64
        
        # Make it executable
        chmod +x project-manager-linux-x64
        
        # Move to system path (optional)
        sudo mv project-manager-linux-x64 /usr/local/bin/project-manager
        
        # Run
        project-manager --help
        \`\`\`
        
        ## Checksum
        Verify the download with the provided SHA256 checksum.
        
        ## Changes
        - Automated release from tag \${{ github.ref_name }}
        - Built with enhanced compatibility and static linking
        - All tests and linting passed
        EOF
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release/project-manager-linux-x64
          release/project-manager-linux-x64.sha256
        body_path: release/RELEASE_NOTES.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 